import json
import os.path
import sys
import importlib

# uses pythonnet to pull the version data from the DLL
def FindGameVersion(architecture):
    dotNetLoader = importlib.util.find_spec('clr')
    if(dotNetLoader is None):
        print()
        installMethod = """
            Python .NET not found. GameVersion will not be updated and imports will give a warning error in Script Hub.
            To include the correct game version follow the following steps:
            1) Install a virtual environment for python 
                python -m venv .\EnvironmentName
            2) Activate the environment
                .\EnvironmentName\Scripts\Activate.ps1
            3) Install prerequisite packages
                pip install wheel 
            4) Install pythonnet
                pip install pythonnet
            5) Create a GameLocation.json using your own game file locations following the format:
            {
                "32bit" : "C:\\GameLocation\\IdleDragons_Data\\Managed\\Assembly-CSharp.dll",
                "64bit" : "C:\\OtherGameLocation\\IdleDragons_Data\\Managed\\Assembly-CSharp.dll",
            }
            6) Run ScriptHubImporter.py again
        """
        error = installMethod
        return error
    import clr 
    importlib.reload(clr)
    jsonFile = open(".\\GameLocation.json", 'r')
    gameVersionsJson = json.load(jsonFile)
    jsonFile.close()
    locFor32Bit = gameVersionsJson["32bit"]
    locFor64Bit = gameVersionsJson["64bit"]
    if str(architecture) == "32":
        if os.path.exists(locFor32Bit):
            clr.AddReference(locFor32Bit)
        else:
            print(locFor32Bit + " not found.")
            return
        import CrusadersGame
        version = CrusadersGame.GameSettings.MobileClientVersion
        CreateVersionFile(architecture, version)
        return "this"
    elif str(architecture) == "64":
        if os.path.exists(locFor64Bit): 
            clr.AddReference(locFor64Bit)
        else:
            print(locFor64Bit + " not found.")
            return
        import CrusadersGame
        version = CrusadersGame.GameSettings.MobileClientVersion
        CreateVersionFile(architecture, version)
        return "that"

# Creates a game version file.
def CreateVersionFile(architecture, version):
    # Output to AHK file
    versionFileString = "; This file was automatically generated by ScriptHubImporter.py\n"
    versionFileString = versionFileString + "global g_ImportsGameVersion" + str(architecture) + " = " + str(version)
    outputFile = open(".\\Imports" + "\\IC_GameVersion" + str(architecture) + "_Import.ahk", 'w')
    outputFile.write(versionFileString)
    outputFile.close()

if __name__ == "__main__":
    FindGameVersion(sys.argv[1])